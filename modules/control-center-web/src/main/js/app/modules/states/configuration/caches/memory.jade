//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

- var model = 'backupItem'

form.panel.panel-default(name='memory' novalidate)
    .panel-heading(bs-collapse-toggle)
        ignite-form-panel-chevron
        label Memory
        ignite-form-field-tooltip.tipLabel
            | Cache memory settings
        ignite-form-revert
    .panel-collapse(role='tabpanel' bs-collapse-target id='memory')
        .panel-body
            .col-sm-6
                .settings-row
                    ignite-form-field
                        ignite-form-field-label
                            | Mode:
                        ignite-form-field-tooltip
                            | Memory modes:
                            ul: li ONHEAP_TIERED - entries are cached on heap memory first
                                ul: li If offheap memory is enabled and eviction policy evicts an entry from heap memory, entry will be moved to offheap memory#[br]
                                       | If offheap memory is disabled, then entry is simply discarded
                                    li If swap space is enabled and offheap memory fills up, then entry will be evicted into swap space#[br]
                                        | If swap space is disabled, then entry will be discarded. If swap is enabled and offheap memory is disabled, then entry will be evicted directly from heap memory into swap
                                li OFFHEAP_TIERED - works the same as ONHEAP_TIERED, except that entries never end up in heap memory and get stored in offheap memory right away#[br]
                                    | Entries get cached in offheap memory first and then get evicted to swap, if one is configured
                                li OFFHEAP_VALUES - entry keys will be stored on heap memory, and values will be stored in offheap memory#[br]
                                    | Note that in this mode entries can be evicted only to swap
                        ignite-form-field-dropdown(
                            data-id='memoryMode'
                            data-name='memoryMode'
                            data-options='[\
                                {value: "ONHEAP_TIERED", label: "ONHEAP_TIERED"},\
                                {value: "OFFHEAP_TIERED", label: "OFFHEAP_TIERED"},\
                                {value: "OFFHEAP_VALUES", label: "OFFHEAP_VALUES"}\
                            ]'
                            data-ng-model='#{model}.memoryMode'
                            data-placeholder='ONHEAP_TIERED'
                        )
                .settings-row(data-ng-show='#{model}.memoryMode !== "OFFHEAP_VALUES"')
                    ignite-form-field
                        ignite-form-field-label
                            | Off-heap max memory:
                        ignite-form-field-tooltip
                            | Sets maximum amount of memory available to off-heap storage#[br]
                            | Possible values are:
                            ul: li -1 - means that off-heap storage is disabled
                                li 0 - Ignite will not limit off-heap storage (it's up to user to properly add and remove entries from cache to ensure that off-heap storage does not grow infinitely
                                li Any positive value specifies the limit of off-heap storage in bytes
                        ignite-form-field-input-number(
                            data-id='offHeapMaxMemory'
                            data-name='offHeapMaxMemory'
                            data-ng-model='#{model}.offHeapMaxMemory'
                            data-placeholder='-1'
                            data-min='-1'
                        )
                .settings-row
                    ignite-form-field
                        ignite-form-field-label
                            | Start size:
                        ignite-form-field-tooltip
                            | Initial cache size which will be used to pre-create internal hash table after start
                        ignite-form-field-input-number(
                            data-id='startSize'
                            data-name='startSize'
                            data-ng-model='#{model}.startSize'
                            data-placeholder='1500000'
                            data-min='0'
                        )
                .settings-row
                    ignite-form-field.checkbox
                        ignite-form-field-input-checkbox(
                            data-id='swapEnabled'
                            data-name='swapEnabled'
                            data-ng-model='#{model}.swapEnabled'
                        )
                        | Swap enabled
                        ignite-form-field-tooltip
                            | Flag indicating whether swap storage is enabled or not for this cache
            ignite-ui-ace.col-sm-6
                .preview-panel(ng-init='mode = false')
                    .preview-legend
                        a(ng-class='{active: !mode, inactive: mode}' ng-click='mode = false') XML
                        | &nbsp;
                        a(ng-class='{active: mode, inactive: !mode}' ng-click='mode = true') Java
                    .preview-content(ng-if='mode')
                        ignite-ui-ace-java(data-cluster='backupItem' data-generator='cacheDomains' data-caches='caches')
                    .preview-content(ng-if='!mode')
                        ignite-ui-ace-xml(data-cluster='backupItem' data-generator='cacheDomains' data-caches='caches')
