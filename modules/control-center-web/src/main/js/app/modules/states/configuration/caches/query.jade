//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

- var model = 'backupItem'
- var form = 'querySqlFunctionClasses';
- var sqlFunctionClasses = model + '.sqlFunctionClasses';

mixin sqlFxField(field, save, newItem)
    - var reset = (newItem ? 'group.add = []' : 'field.edit = false')
    - var resetOnEnter = (newItem ? '(stopblur = true) && (group.add = [{}])' : '(field.edit = false)')
    - var resetOnBlur = (newItem ? '!stopblur && (group.add = [])' : 'field.edit = false')

    ignite-form-field-java-class(
        data-name='#{field}'
        data-ng-model='#{field}'
        data-ng-required='true'
        data-ignite-unique='#{sqlFunctionClasses}'
        data-ignite-form-field-input-autofocus='true'
        on-enter='#{valid} && (#{save}); #{valid} && #{resetOnEnter};'
        on-escape='#{reset}'
        ng-blur='#{valid} && (#{save}); #{resetOnBlur};'
    )
        block


mixin sqlFxSaveBtn(valid, save, newItem)
    - var reset = (newItem ? 'group.add = []' : 'field.edit = false')

    i.fa.fa-floppy-o(
        ng-show='#{valid}'
        ng-click='#{valid} && #{save}; #{valid} && (#{reset});'
        bs-tooltip
        data-title='Click icon or press [Enter] to save item'
    )

mixin sqlFxFeedbackUnique(field)
    i.fa.fa-exclamation-triangle.form-control-feedback(
        ng-show='!#{form}.#{field}.$pristine && #{form}.#{field}.$error.igniteUnique'
        bs-tooltip
        data-title='SQL function with such class name already exists!'
    )

form.panel.panel-default(name='query' novalidate)
    .panel-heading(bs-collapse-toggle)
        ignite-form-panel-chevron
        label Queries & Indexing
        ignite-form-field-tooltip.tipLabel
            | Cache queries settings
        ignite-form-revert
    .panel-collapse(role='tabpanel' bs-collapse-target id='query')
        .panel-body
            .col-sm-6
                .settings-row
                    ignite-form-field
                        ignite-form-field-label
                            | SQL schema name:
                        ignite-form-field-tooltip
                            | Schema name for cache according to SQL ANSI-99
                        ignite-form-field-input-text(
                            data-id='sqlSchema'
                            data-name='sqlSchema'
                            data-ng-model='#{model}.sqlSchema'
                            data-placeholder='Input schema name'
                        )
                .settings-row
                    ignite-form-field
                        ignite-form-field-label
                            | On-heap cache for off-heap indexes:
                        ignite-form-field-tooltip
                            | Number of SQL rows which will be cached onheap to avoid deserialization on each SQL index access
                        ignite-form-field-input-number(
                            data-id='sqlOnheapRowCacheSize'
                            data-name='sqlOnheapRowCacheSize'
                            data-ng-model='#{model}.sqlOnheapRowCacheSize'
                            data-placeholder='10240'
                            data-min='1'
                        )
                .settings-row
                    ignite-form-group(ng-model='#{sqlFunctionClasses}' ng-form='#{form}')
                        ignite-form-field-label
                            | SQL functions
                        ignite-form-group-tooltip
                            | Collections of classes with user-defined functions for SQL queries
                        ignite-form-group-add(ng-click='group.add = [{}]')
                            | Add new user-defined functions for SQL queries

                        .group-content(ng-if='#{sqlFunctionClasses}.length')
                            - var field = 'edit'
                            - var valid = form + '.' + field + '.$valid'
                            - var save = sqlFunctionClasses + '[$index] = ' + field

                            ignite-form-field(ng-repeat='model in #{sqlFunctionClasses} track by $index' type='internal' name='SQL function')
                                .indexField
                                    | {{ $index+1 }})
                                i.tipField.fa.fa-remove(
                                    ng-hide='field.edit'
                                    bs-tooltip='"Remove user-defined function"'
                                    ng-click='#{sqlFunctionClasses}.splice(#{sqlFunctionClasses}.indexOf(model), 1)'
                                )

                                span(ng-hide='field.edit')
                                    a.labelFormField(ng-click='field.edit = true') {{ model }}
                                span(ng-if='field.edit' ng-init='#{field} = model')
                                    +sqlFxField(field, save, false)
                                        +sqlFxSaveBtn(valid, save, false)
                                        +sqlFxFeedbackUnique(field)

                        .group-content(ng-repeat='field in group.add')
                            - var field = 'new'
                            - var valid = form + '.' + field + '.$valid'
                            - var save = sqlFunctionClasses + '.push(' + field + ')'

                            ignite-form-field(type='internal' name='SQL function')
                                +sqlFxField(field, save, true)
                                    +sqlFxSaveBtn(valid, save, true)
                                    +sqlFxFeedbackUnique(field)
                        .group-content-empty(ng-if='!(#{sqlFunctionClasses}.length) && !group.add.length')
                            | Not defined
                .settings-row
                    ignite-form-field
                        ignite-form-field-label
                            | Long query timeout:
                        ignite-form-field-tooltip
                            | Timeout in milliseconds after which long query warning will be printed
                        ignite-form-field-input-number(
                            data-id='longQueryWarningTimeout'
                            data-name='longQueryWarningTimeout'
                            data-ng-model='#{model}.longQueryWarningTimeout'
                            data-placeholder='3000'
                            data-min='0'
                        )
                .settings-row
                    ignite-form-field.checkbox
                        ignite-form-field-input-checkbox(
                            data-id='snapshotableIndex'
                            data-name='snapshotableIndex'
                            data-ng-model='#{model}.snapshotableIndex'
                        )
                        | Snapshotable index
                        ignite-form-field-tooltip
                            | Flag indicating whether SQL indexes should support snapshots
                .settings-row
                    ignite-form-field.checkbox
                        ignite-form-field-input-checkbox(
                            data-id='sqlEscapeAll'
                            data-name='sqlEscapeAll'
                            data-ng-model='#{model}.sqlEscapeAll'
                        )
                        | Escape table and filed names
                        ignite-form-field-tooltip
                            | If set then all the SQL table and field names will be escaped with double quotes
                            | This enforces case sensitivity for field names and also allows having special characters in table and field names
            ignite-ui-ace.col-sm-6
                .preview-panel(ng-init='mode = false')
                    .preview-legend
                        a(ng-class='{active: !mode, inactive: mode}' ng-click='mode = false') XML
                        | &nbsp;
                        a(ng-class='{active: mode, inactive: !mode}' ng-click='mode = true') Java
                    .preview-content(ng-if='mode')
                        ignite-ui-ace-java(data-cluster='backupItem' data-generator='cacheDomains' data-caches='caches')
                    .preview-content(ng-if='!mode')
                        ignite-ui-ace-xml(data-cluster='backupItem' data-generator='cacheDomains' data-caches='caches')
